

Snowball Sampling
Let us say I am snowball sampling to create a synthetic cluster of size 10.
1. I pick a starting node at random (lets say Node 1 and it has 5 neighbors Nodes 2-5)
2. Add all 5 of those neighbors at once to the synthetic cluster
3. Pick one of those nodes in the synthetic cluster we haven’t previously added the neighbors of (so Nodes 2-5) at random and add’s it neighbors (choose randomly from the neighbors as needed to not exceed the desired number of nodes, 10)
Repeate step 3 until synthetic cluster is size 10


With genes and HPO matching the original cluster:
I found this one easier to write out as pseudo code

original_cluster = [set of genes and HPOs in original cluster]

synthetic_cluster = []
used_nodes = []
start_node = random node from original cluster
add start_node to synthetic_cluster
while number_of_genes(synthetic_cluster) < number_of_genes(original_cluster) and number_of_HPOs(synthetic_cluster) < number_of_HPOs(original_cluster):
    possible_nodes = disjoint set of synthetic_cluster and used_nodes
    
    if there are no possible_nodes:
        break out of while loop
    
    current_node = random node from possible_nodes
    add current_node to used_nodes

    gene_neighbors = all gene neighbors of current_node
    HPO_neighbors = all HPO neighbors of current_node
    
    while length(gene_neighbors) > 0 and number_of_genes(synthetic_cluster) < number_of_genes(original_cluster):
        choice = random node from gene_neighbors
        remove choice from gene_neighbors
        add choice to synthetic_cluster
    
    while length(HPO_neighbors) > 0 and number_of_HPOs(synthetic_cluster) < number_of_HPOs(original_cluster):
        choice = random node from HPO_neighbors
        remove choice from HPO_neighbors
        add choice to synthetic_cluster

